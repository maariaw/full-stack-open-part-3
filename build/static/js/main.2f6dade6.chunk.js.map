{"version":3,"sources":["components/Notification.js","components/Filter.js","components/AddNew.js","components/Persons.js","services/personServices.js","App.js","index.js"],"names":["Notification","type","message","console","log","style","background","borderStyle","borderRadius","fontSize","padding","marginBottom","Filter","props","htmlFor","id","value","onChange","AddNew","onSubmit","onFormSubmit","nameValue","onNameChange","numberValue","onNumberChange","Person","name","number","onClick","handleDelete","Persons","list","map","person","key","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","newMessage","setNewMessage","messageType","setMessageType","useEffect","personService","personList","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","personObject","window","confirm","oldPerson","find","p","returnedPerson","setTimeout","catch","error","concat","listStyleType","marginLeft","paddingLeft","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f6dade6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({type, message}) => {\n    if (message === null) {\n        return null\n    }\n    console.log(message)\n    const style = {\n        background: 'gainsboro',\n        borderStyle: 'solid',\n        borderRadius: 5,\n        fontSize: 18,\n        padding: 10,\n        marginBottom: 10\n    }\n    if(type === 'error') {\n        style['color'] = 'red'\n    } else if (type === 'success') {\n        style['color'] = 'green'\n    }\n    return (\n        <div style={style}>\n            <strong>{message}</strong>\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Filter = (props) => {\n    return (\n      <label htmlFor=\"filter\">\n        Filter shown with: \n        <input\n          id=\"filter\"\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </label>\n    )\n  }\n\nexport default Filter","import React from 'react'\n\nconst AddNew = (props) => (\n    <form onSubmit={props.onFormSubmit}>\n        <div>\n            name:\n            <input\n                value={props.nameValue}\n                onChange={props.onNameChange}\n            />\n            <div>\n                number:\n              <input\n                    value={props.numberValue}\n                    onChange={props.onNumberChange}\n                />\n            </div>\n        </div>\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n)\n\nexport default AddNew","import React from 'react'\n\nconst Person = (props) => (\n    <li>\n        {props.name} {props.number} <button onClick={props.handleDelete}>Delete</button>\n    </li>\n)\n\nconst Persons = (props) => {\n    console.log(props.list);\n    return (\n        props.list.map((person) => (\n            <Person\n                key={person.id}\n                name={person.name}\n                number={person.number}\n                handleDelete={props.handleDelete(person.id)}\n            />\n        ))\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst replacePerson = (newPerson, id) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nexport default {\n    getAll, create, deletePerson, replacePerson\n}","import React, { useState, useEffect } from 'react'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport AddNew from './components/AddNew'\nimport Persons from './components/Persons'\nimport personService from './services/personServices'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ newMessage, setNewMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(personList => {\n        setPersons(personList)\n      })\n  }, [])\n\n  const personsToShow = !newSearch\n    ? persons\n    : persons.filter(person => person.name\n      .toLowerCase()\n      .includes(newSearch.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject ={\n      name: newName,\n      number: newNumber\n    }\n    if (persons.map((person) => person.name)\n      .includes(newName)) {\n        const message = `${newName} is already in the phonebook. ` +\n          `Replace the old number with a new one?`\n        if (window.confirm(message)) {\n          const oldPerson = persons.find(p => p.name === newName)\n          personService\n            .replacePerson(personObject, oldPerson.id)\n            .then(returnedPerson => {\n              setPersons(persons\n                .map(person => person.id !== returnedPerson.id ?\n                  person : returnedPerson))\n              setNewName('')\n              setNewNumber('')\n              setMessageType('success')\n              setNewMessage(\n                `Edited ${personObject.name}`\n              )\n              setTimeout(() => {\n                setNewMessage(null)\n                setMessageType(null)\n              }, 4000)\n            })\n            .catch(error => {\n              setMessageType('error')\n              setNewMessage(\n                `Can't edit ${personObject.name} because the contact has ` +\n                `been deleted. Try again to add a new contact.`\n              )\n              setPersons(persons.filter(person => person.id !== oldPerson.id))\n              setTimeout(() => {\n                setNewMessage(null)\n                setMessageType(null)\n              }, 4000)\n            })\n        }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setMessageType('success')\n          setNewMessage(\n            `Added ${personObject.name}`\n          )\n          setTimeout(() => {\n            setNewMessage(null)\n            setMessageType(null)\n          }, 4000)\n        })\n    }\n  }\n\n  const handleDeletePerson = (id) => () => {\n    const personToDelete = persons.find(p => p.id === id)\n    if (window.confirm(`Delete the number of ${personToDelete.name}?`)) {\n      personService\n      .deletePerson(id)\n      .then(returnedPerson => {\n        setPersons(persons.filter(person => person.id !== id))\n        setMessageType('success')\n        setNewMessage(\n          `Deleted ${personToDelete.name}`\n        )\n        setTimeout(() => {\n          setNewMessage(null)\n          setMessageType(null)\n        }, 4000)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleSearchChange = (event) => setNewSearch(event.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification type={messageType} message={newMessage} />\n      <Filter value={newSearch} onChange={handleSearchChange} />\n      <h3>Add new</h3>\n      <AddNew\n        onFormSubmit={addPerson}\n        nameValue={newName}\n        onNameChange={handleNameChange}\n        numberValue={newNumber}\n        onNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <ul style={{listStyleType: 'none', marginLeft: 0, paddingLeft: 0}}>\n        <Persons\n        list={personsToShow}\n        handleDelete={handleDeletePerson}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}